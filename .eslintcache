[{"/Users/sarthak/Documents/EgenSolutions/my-app/src/index.js":"1","/Users/sarthak/Documents/EgenSolutions/my-app/src/App.js":"2","/Users/sarthak/Documents/EgenSolutions/my-app/src/reportWebVitals.js":"3","/Users/sarthak/Documents/EgenSolutions/my-app/src/Home/Home.js":"4","/Users/sarthak/Documents/EgenSolutions/my-app/src/JobDescription/JobDescription.js":"5","/Users/sarthak/Documents/EgenSolutions/my-app/src/Header/Header.js":"6"},{"size":500,"mtime":1607122038420,"results":"7","hashOfConfig":"8"},{"size":535,"mtime":1607218636536,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607122038422,"results":"10","hashOfConfig":"8"},{"size":7418,"mtime":1607219748495,"results":"11","hashOfConfig":"8"},{"size":4729,"mtime":1607218726108,"results":"12","hashOfConfig":"8"},{"size":967,"mtime":1607185877478,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lrta8j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarthak/Documents/EgenSolutions/my-app/src/index.js",[],["28","29"],"/Users/sarthak/Documents/EgenSolutions/my-app/src/App.js",[],"/Users/sarthak/Documents/EgenSolutions/my-app/src/reportWebVitals.js",[],"/Users/sarthak/Documents/EgenSolutions/my-app/src/Home/Home.js",["30"],"import React, { useState,useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport './Home.css'\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport axios from 'axios'\n//import WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\n//import Brightness3Icon from '@material-ui/icons/Brightness3';\n\n\nconst Home = ()=>{\n\n    const inlineStyle={\n        textDecoration:\"none\"\n    }\n\n    const [state, setState] = React.useState({\n        checkedB: true\n      });\n    const[mode,setMode] = useState(true);\n    let [positions,setPositions] = useState([]);\n\n    const test=[\n        {id:\"1\",name:\"sam\"},\n        {id:\"2\",name:\"sar\"},\n        {id:\"3\",name:\"chay\"},\n        {id:\"4\",name:\"pra\"},\n    ]\n    \n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        setMode(!mode);\n    };\n\n    useEffect(() => {\n        if(mode === true)\n            document.title = \"Github Jobs | Light\"\n        else\n            document.title = \"Github Jobs | Dark\"\n      });\n\n    //   useEffect(() => {\n    //     axios.get(\n    //         \"https://jobs.github.com/positions.json?search=node\",\n    //         )\n    //         .then(result=>{\n    //           setPositions(JSON.parse(result.data));\n    //         })\n    //   console.log(positions);\n    //   });\n\n      const getGithubPositions = ()=>{\n         \n          axios.get(\n              \"https://jobs.github.com/positions.json?search=node\",\n              )\n              .then(result=>{\n                setPositions(JSON.parse(result.data));\n              })\n        console.log(positions);\n    }\n\n    return(\n        <div className={\"panelPage\"+(state.checkedB === true?\"light\":\"dark\")}>\n            <div className=\"headerlight\">\n            <div className=\"filter\">\n                <span>\n                    <SearchIcon/>\n                    <input type=\"text\" placeholder=\"Filter by Job Title, Name, Companies\" className=\"enterJob\"></input>\n                </span>\n                <span>\n                    <LocationOnIcon/>\n                    <input type=\"text\" placeholder=\"Filter by Location\" className=\"enterJob\"></input>\n                </span>\n                <button class=\"findJobButton\">Search</button>\n                <span>\n                    {/* <Brightness3Icon className=\"darkIcon\"></Brightness3Icon> */}\n                    <Switch\n                     className=\"toggle\"\n                     checked={state.checkedB}\n                     onChange={handleChange}\n                     name=\"checkedB\"\n                     color=\"primary\">\n                    </Switch>\n                    {/* <WbIncandescentIcon/> */}\n                    <label className=\"timePosted\">{(mode ===  true ?\"Light\":\"Dark\")+\" Mode\"}</label>\n                </span>\n            </div>\n            </div>\n            <div className=\"details\">\n                {/* {positions.map((job) => (\n                    <div className=\"jobBlock\">{job.id}</div>\n                 ))} */}\n                <Link style={inlineStyle} to=\"/jobid=32321\">\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                </Link>\n           \n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Sr. Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Front-End Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Solutions Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Infrastructure Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Sr.Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Product Manager</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Sr. Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div className=\"jobBlock\">\n                    <label className=\"timePosted\">9h ago - Full time</label>\n                    <label className={\"jobTitle\"+(state.checkedB === true?\"light\":\"dark\")}>Sr. Software Engineer</label>\n                    <label className=\"jobLocation\">New York, US</label>\n                </div>\n                <div>\n                    <button className=\"load\" onClick={getGithubPositions}>Load More</button>\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Home;","/Users/sarthak/Documents/EgenSolutions/my-app/src/JobDescription/JobDescription.js",[],"/Users/sarthak/Documents/EgenSolutions/my-app/src/Header/Header.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":24,"column":11,"nodeType":"37","messageId":"38","endLine":24,"endColumn":15},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]